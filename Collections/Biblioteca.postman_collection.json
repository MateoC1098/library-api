{
	"info": {
		"_postman_id": "3d15bf66-70a3-4b9d-b182-faaecb3f3448",
		"name": "Biblioteca",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27023190"
	},
	"item": [
		{
			"name": "Crear biblioteca",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"pm.globals.set(\"library_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Biblioteca 1\",\r\n  \"direccion\": \"Calle 123 #45-67\",\r\n  \"ciudad\": \"Bogotá\",\r\n  \"horarioAtencion\": \"08:00-17:00\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/libraries",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"libraries"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear biblioteca inválida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Debe retornar un mensaje de validación\", function () {\r",
							"  const jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.be.an(\"array\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Biblioteca sin horario\",\r\n  \"direccion\": \"Calle 456\",\r\n  \"ciudad\": \"Medellín\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/libraries",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"libraries"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todas las bibliotecas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Debe retornar un arreglo de bibliotecas\", function () {\r",
							"  const jsonData = pm.response.json();\r",
							"  pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/libraries",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"libraries"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener biblioteca por id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/libraries/{{library_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"libraries",
						"{{library_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener biblioteca por un id que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"  pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Mensaje de error esperado\", function () {\r",
							"  const jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"No se encontró la biblioteca con el id dado\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/libraries/123e4567-e89b-12d3-a456-426614174000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"libraries",
						"123e4567-e89b-12d3-a456-426614174000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar una biblioteca",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Biblioteca actualizada\",\r\n  \"direccion\": \"Calle 123 #45-67\",\r\n  \"ciudad\": \"Bogotá\",\r\n  \"horarioAtencion\": \"08:00-17:00\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/libraries/b118a05f-a5c1-4460-a8a5-651b4134d8a5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"libraries",
						"b118a05f-a5c1-4460-a8a5-651b4134d8a5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar una biblioteca con un id que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"  pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Mensaje de error esperado\", function () {\r",
							"  const jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"No se encontró la biblioteca con el id dado\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Biblioteca actualizada\",\r\n  \"direccion\": \"Calle 123 #45-67\",\r\n  \"ciudad\": \"Bogotá\",\r\n  \"horarioAtencion\": \"08:00-17:00\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/libraries/123e4567-e89b-12d3-a456-426614174000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"libraries",
						"123e4567-e89b-12d3-a456-426614174000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar biblioteca",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"  pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/libraries/{{library_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"libraries",
						"{{library_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar biblioteca con id que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Error message matches expected\", function () {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.message).to.eql(\"No se encontró la biblioteca con el id dado\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/libraries/00000000-0000-0000-0000-000000000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"libraries",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		}
	]
}